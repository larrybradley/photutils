.. doctest-skip-all

.. _whatsnew-3.0:

****************************
What's New in Photutils 3.0?
****************************

Here we highlight some of the new functionality of the 3.0 release.
In addition to these changes, Photutils 3.0 includes several
smaller improvements and bug fixes, which are described in the full
:ref:`changelog`.

.. contents::
   :local:
   :depth: 2


New SourceGroups class
======================

A new :class:`~photutils.psf.SourceGroups` class provides a convenient
and feature-rich interface for working with source grouping results. It
includes:

* Direct access to group IDs via the ``groups`` attribute
* Properties for ``n_sources``, ``n_groups``, ``sizes``, and
  ``group_centers``
* The ``get_group_sources(group_id)`` method to retrieve sources in a
  specific group
* A ``plot()`` method to visualize grouping results with color-coded
  apertures

A :class:`~photutils.psf.SourceGroups` object can be returned by the
:class:`~photutils.psf.SourceGrouper` class when called with the
``return_source_groups=True`` keyword argument::

    >>> from photutils.psf import SourceGrouper
    >>> grouper = SourceGrouper(min_separation=10)
    >>> groups = grouper(x, y, return_source_groups=True)
    >>> print(groups.n_groups)  # number of groups

It can also be instantiated directly from source positions and group
IDs::

    >>> from photutils.psf import SourceGroups
    >>> groups = SourceGroups(x, y, group_ids)


Improved Handling of Non-Finite Local Background Values
========================================================

:class:`~photutils.psf.PSFPhotometry` and
:class:`~photutils.psf.IterativePSFPhotometry` now gracefully handle
non-finite (NaN or inf) local background values instead of raising an
error. This situation can occur when the local background estimator
encounters problematic regions, such as:

* Sources near image edges where the background annulus extends beyond
  the image
* Fully masked regions within the background annulus
* User-provided ``init_params`` containing non-finite local background
  values

When a non-finite local background value is encountered:

1. The actual non-finite value is preserved and reported in the output
   table's ``local_bkg`` column
2. The value is not subtracted from the data before PSF fitting
3. A new flag (bit 512, ``NON_FINITE_LOCALBKG``) is set in the
   ``flags`` column to indicate the issue

This allows users to identify and handle problematic sources
appropriately while still obtaining PSF fitting results where possible.
The ``NON_FINITE_LOCALBKG`` flag can be accessed via the
:data:`~photutils.psf.PSF_FLAGS` object::

    >>> from photutils.psf import PSF_FLAGS
    >>> print(PSF_FLAGS.NON_FINITE_LOCALBKG)
    512


Removed Deprecations
====================

The following previously deprecated features have been removed:

* The ``Background2D`` ``edge_method`` keyword argument.
* The ``Background2D`` ``background_mesh_masked``,
  ``background_rms_mesh_masked``, and ``mesh_nmasked`` properties.
* The ``BkgZoomInterpolator`` ``grid_mode`` keyword argument.


New Deprecations
================

The ``interpolator`` keyword argument for ``Background2D`` is
now deprecated. When ``interpolator`` is eventually removed, the
``scipy.ndimage.zoom`` cubic spline interpolator will always be used to
resize the low-resolution arrays. The behavior will be identical to the
current ``BkgZoomInterpolator`` default.

Relatedly, the ``BkgIDWInterpolator`` and ``BkgZoomInterpolator``
classes are now deprecated. The ``BkgIDWInterpolator`` is not
well-suited for resizing images on a regular grid to larger sizes. It
is also significantly slower than the default interpolator based on
``scipy.ndimage.zoom``.

The ``grid_from_epsfs`` helper function is now deprecated. This function
creates a ``GriddedPSFModel`` from a list of ePSFs. Instead, use the
``GriddedPSFModel`` class directly.
